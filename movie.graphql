type Movie {
  id: Int!
  popularity: Float
  release_date: String
  title: String!
  vote_average: Int
  vote_count: Int
  genre_ids: [Int]
  genres: [Genre]
    @materializer(
      query: "genres"
      arguments: [{ name: "ids", field: "genre_ids" }]
    )
  review: Review
    @materializer(
      query: "reviewByMovie"
      arguments: [{ name: "title", field: "title" }]
    )
}

type Rating {
  Source: String
  Value: String
}

type Review {
  title: String
  year: String
  ratings: [Rating]
  rottenScore: Int
  metaScore: Int
  boxOffice: Int
}

type Genre {
  id: Int
  name: String
}

type Query {
  nowPlayingMovies: [Movie]
    @rest(
      endpoint: "https://api.themoviedb.org/3/movie/now_playing?api_key=$apikey"
      configuration: "movie_db_config"
      resultroot: "results[]"
    )

  reviewByMovie(title: String!): Review
    @rest(
      endpoint: "https://omdbapi.com/?apikey=$apikey&t=$title"
      configuration: "omdb_config"
      method: GET
      ecmascript: """
      function transformREST(s) {
        try {
          const review = JSON.parse(s);
          const rottenScore = review.Ratings.find(rating => rating.Source === "Rotten Tomatoes")
          return {
            title: review.Title,
            year: review.Year,
            metaScore: parseInt(review.Metascore),
            boxOffice: parseInt(review.BoxOffice.replace("$", "").replace(/,/g, "")),
            rottenScore: parseInt(rottenScore.Value.replace("%", ""))
          };
        }catch(e) {
          return {}
        }
      }
      """
    )

  genres(ids: [Int]): [Genre]
    @rest(
      endpoint: "https://api.themoviedb.org/3/genre/movie/list?api_key=$apikey"
      configuration: "movie_db_config"
      method: GET
      ecmascript: """
      function transformREST(s) {
        try {
          const allGenres = JSON.parse(s);
          const genresIds = get("ids")
          const response = allGenres.genres.filter((gender) => genresIds.includes(gender.id))
          return JSON.stringify(response);
        }catch(e) {
          return []
        }
      }
      """
    )
}
